{"version":3,"sources":["Link.tsx"],"names":["React","Text","useLinkProps","Link","to","action","rest","props","onPress","e","onClick","createElement"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAuD,cAAvD;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAQA;;;;;;;;AAQA,eAAe,SAASC,IAAT,OAA8C;AAAA,MAAhC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAgC;AAAA,MAAfC,IAAe;;AAC3D,QAAMC,KAAK,GAAGL,YAAY,CAAC;AAAEE,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,CAA1B;;AAEA,QAAMG,OAAO,GACXC,CADc,IAEX;AACH,QAAI,aAAaH,IAAjB,EAAuB;AAAA;;AACrB;AACA,uBAAAA,IAAI,CAACE,OAAL,qEAAAF,IAAI,EAAWG,CAAX,CAAJ;AACD;;AAED,QAAIF,KAAK,CAACG,OAAV,EAAmB;AACjBH,MAAAA,KAAK,CAACG,OAAN,CAAcD,CAAd;AACD,KAFD,MAEO;AACLF,MAAAA,KAAK,CAACC,OAAN,CAAcC,CAAd;AACD;AACF,GAbD;;AAeA,SAAOT,KAAK,CAACW,aAAN,CAAoBV,IAApB,oBACFM,KADE,MAEFD,IAFE,MAGDC,KAAK,CAACG,OAAN,GAAgB;AAAEA,IAAAA,OAAO,EAAEF;AAAX,GAAhB,GAAuC;AAAEA,IAAAA;AAAF,GAHtC,EAAP;AAKD","sourcesContent":["import * as React from 'react';\nimport { Text, TextProps, GestureResponderEvent } from 'react-native';\nimport { NavigationAction } from '@react-navigation/core';\nimport useLinkProps from './useLinkProps';\n\ntype Props = {\n  to: string;\n  action?: NavigationAction;\n  target?: string;\n} & (TextProps & { children: React.ReactNode });\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link({ to, action, ...rest }: Props) {\n  const props = useLinkProps({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      // @ts-ignore\n      rest.onPress?.(e);\n    }\n\n    if (props.onClick) {\n      props.onClick(e);\n    } else {\n      props.onPress(e);\n    }\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...(props.onClick ? { onClick: onPress } : { onPress }),\n  });\n}\n"]}